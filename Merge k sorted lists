# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def mergeKLists(self, lists):
        if not lists or len(lists)==0:
            return None
        while len(lists) > 1:
            mergedLists = []
            for i in range(0,len(lists),2):
                l1 = lists[i]
                l2 = lists[i+1] if (i + 1) < len(lists) else None
                mergedLists.append(self.mergeList(l1,l2))
            lists = mergedLists
        return lists[0]
    
    def mergeList(self,l1,l2):
        ans = ListNode()
        ans_ptr = ans
        
        while l1 and l2:
            if l1.val <= l2.val:
                ans_ptr.next = l1
                l1 = l1.next
            else:
                ans_ptr.next = l2
                l2 = l2.next
            ans_ptr = ans_ptr.next
        if l1:
            ans_ptr.next = l1
        else:
            ans_ptr.next = l2
        return ans.next
        
